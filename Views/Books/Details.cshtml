@model asp_mvc_crud.Models.Book

@{
    ViewData["Title"] = "Book Details";
}

<h1>Book Details</h1>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4>@Model.Title</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Title)</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.Title)</dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Author)</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.Author.FullName)</dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Category)</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.Category.CategoryName)</dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.ISBN)</dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.ISBN))
                                {
                                    <code>@Html.DisplayFor(model => model.ISBN)</code>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Publisher)</dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.Publisher))
                                {
                                    @Html.DisplayFor(model => model.Publisher)
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.PublicationYear)</dt>
                            <dd class="col-sm-8">
                                @if (Model.PublicationYear.HasValue)
                                {
                                    @Html.DisplayFor(model => model.PublicationYear)
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.TotalCopies)</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.TotalCopies)</dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.AvailableCopies)</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-@(Model.AvailableCopies > 0 ? "success" : "danger")">
                                    @Html.DisplayFor(model => model.AvailableCopies)
                                </span>
                            </dd>

                            <dt class="col-sm-4">Borrowed Copies</dt>
                            <dd class="col-sm-8">@Model.BorrowedCopies</dd>

                            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Status)</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-@(Model.Status == "Available" ? "success" : Model.Status == "Maintenance" ? "warning" : "danger")">
                                    @Html.DisplayFor(model => model.Status)
                                </span>
                            </dd>

                            <dt class="col-sm-4">Availability</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-@(Model.IsAvailable ? "success" : "danger")">
                                    @(Model.IsAvailable ? "Available for borrowing" : "Not available")
                                </span>
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.Borrowings?.Any() == true)
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5>Borrowing History</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Member</th>
                                    <th>Borrow Date</th>
                                    <th>Due Date</th>
                                    <th>Return Date</th>
                                    <th>Status</th>
                                    <th>Fine</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var borrowing in Model.Borrowings.OrderByDescending(b => b.BorrowDate))
                                {
                                    <tr class="@(borrowing.IsOverdue ? "table-warning" : "")">
                                        <td>@borrowing.Member?.FullName</td>
                                        <td>@borrowing.BorrowDate.ToString("dd/MM/yyyy")</td>
                                        <td>@borrowing.DueDate.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            @if (borrowing.ReturnDate.HasValue)
                                            {
                                                @borrowing.ReturnDate.Value.ToString("dd/MM/yyyy")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not returned</span>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-@(borrowing.Status == "Returned" ? "success" : borrowing.IsOverdue ? "danger" : "primary")">
                                                @(borrowing.IsOverdue && borrowing.Status == "Borrowed" ? "Overdue" : borrowing.Status)
                                            </span>
                                        </td>
                                        <td>
                                            @if (borrowing.FineAmount > 0)
                                            {
                                                <span class="text-danger">@borrowing.FineAmount.ToString("C")</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="card mt-4">
                <div class="card-body text-center text-muted">
                    <p>No borrowing history found.</p>
                </div>
            </div>
        }

        <div class="mt-3">
            <a asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-primary">Edit</a>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </div>
</div>